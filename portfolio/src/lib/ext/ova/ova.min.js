/**
 * ============================================================================================
 *                                            INFO
 * ============================================================================================
 *
 *                                  ██████  ██    ██  █████
 *                                 ██    ██ ██    ██ ██   ██
 *                                 ██    ██ ██    ██ ███████
 *                                 ██    ██  ██  ██  ██   ██
 *                                  ██████    ████   ██   ██
 *
 *                                    (On View Animations)
 *
 * ■ Author: Andrea Cremonesi
 * ■ Version: 1.0
 * ■ Description: This JS file is part of a lightweight library called "OVA (On View Animations)".
 *                The code in this file handles animatable elements within the DOM that have the
 *                "data-ova" attribute, which can contain specific animation settings.
 *                During initialization, the correct animation parameters for each animatable
 *                element are set.
 *                The animations are controlled by an IntersectionObserver, which checks if an
 *                element is within the viewport before triggering its animation.
 *
 * ============================================================================================
 *                                            LICENSE
 * ============================================================================================
 *
 * ■ License: MIT License
 *
 * Copyright (c) [anno] Andrea Cremonesi
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * ============================================================================================
 * ============================================================================================
 */

export const OVA_DEFAULT_SETTINGS = {
  animation: "fade-in",
  duration: "1s",
  easing: "ease-out",
  offset: "max(50vw, 50vh)",
  delay: "0",
};
export const OVA_OBSERVER_OPTIONS = { rootMargin: "0px", threshold: 0 };
export const initOVA = () => {
  let t = new IntersectionObserver(callback, OVA_OBSERVER_OPTIONS);
  document.querySelectorAll("[data-ova]").forEach((e) => {
    initOVAElement(e), t.observe(e);
  });
};
let callback = (t, e) => {
    t.forEach((t) => {
      t.isIntersecting &&
        (t.target.classList.add("in-view-OVA"), e.unobserve(t.target));
    });
  },
  initOVAElement = (t) => {
    t.classList.add("OVA-animation"), extractDataOVA(t);
  },
  extractDataOVA = (t) => {
    let e = t?.dataset?.ova,
      a = {};
    if (e)
      try {
        let r = e.split(";");
        r.forEach((t) => {
          let e = t.trim().split(":");
          e[0] && e[1] && (a[e[0].trim()] = e[1].trim());
        });
      } catch (i) {
        console.error(i);
      }
    setProperties(t, a);
  },
  setProperties = (t, e) => {
    let a = { ...OVA_DEFAULT_SETTINGS, ...e };
    (a.animation += "-OVA"),
      Object.keys(a).forEach((e) => {
        t.style.setProperty(`--OVA-${e}`, a?.[e]);
      });
  };
